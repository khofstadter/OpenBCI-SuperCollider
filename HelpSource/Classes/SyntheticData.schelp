class:: SyntheticData
summary:: for generating synthetic test data coming from a board
categories:: External Control
related:: Classes/OpenBCI, Classes/OpenBCIboard

description::
this class acts like a drop-in replacement for link::Classes/CytonSerial:: and link::Classes/CytonWifi::.

note::
does not survive link::Classes/CmdPeriod::.
::

the synthetic data generated put gaussian noise on all channels and then modify the first four channels in the following manner...

definitionList::
## first channel || the is noise scaled up x10
## second channel || a 10 Hz sine tone at 10 uVrms is added to the noise
## third channel || a 15 Hz sine tone at 20 uVrms is added to the noise
## fourth channel || a 20 Hz sine tone at 30 uVrms is added to the noise
## fifth channel || a 25 Hz sine tone at 40 uVrms is added to the noise
## sixth channel || a 30 Hz sine tone at 50 uVrms is added to the noise
## seventh channel || a 60 Hz sine tone at 20 uVrms is added to the noise
::

classmethods::

method::new
start generating test data

argument::numChannels
use 8 for faking Cyton board, 4 for Ganglion etc.

argument::sampleRate
use 250 for faking Cyton over bluetooth, 200 for Ganglion over bluetooth etc.

argument::dataAction
set the link::Classes/OpenBCI#-dataAction::

argument::initAction
set the link::Classes/OpenBCI#-initAction::

argument::bufferSize
how many datapoints to store in the internal buffer.

instancemethods::

private:: initSyntheticData, prTask

method::softReset
reset sample rate. Rarely used - just for keeping the class consistent with link::Classes/OpenBCIboard::,

method::start
start streaming synthetic data.

method::stop
stop streaming synthetic data.

method::close
stops main loop.

method::noiseAmp
Turn off noise by setting this to 0.0 - just for help debugging.

examples::

code::
(
//var board= CytonSerial("/dev/tty.usbserial-DM00DRM0", initAction: {|b| b.start});
var board= SyntheticData(initAction: {|b| b.start});
~board= board;
)

~board.accelAction= {|xyz| xyz.postln};  //start posting synthetic accelerometer data

~board.stop;
~board.start;
~board.close;
::
