class:: DataSequencer
summary:: distribute data and accelerometer values over time
categories:: External Control
related:: Classes/OpenBCI, Classes/DataBuffer, Classes/DataFFT

description::
Collects data from any OpenBCI board and spread out over time. Mainly useful with wifi shield where packages arrives in chunks.

classmethods::

method::new
create a new instance

argument::board
an instance of a link::Classes/OpenBCI:: subclass (for example a link::Classes/CytonWifi:: or link::Classes/GanglionWifi::).

argument::maxSize
the number of slots in both data and accelerometer buffers. If the data is not read fast enough, the buffers will fill up to this size and then start dropping values (fifo).

argument::dataActive
a link::Classes/Boolean:: flag indicating if data should be buffered or not.

argument::accelActive
a link::Classes/Boolean:: flag indicating if accelerometer data should be buffered or not.

instancemethods::

private::initDataSequencer

method::board
get the board instance

method::start
start sequencing

method::stop
stop sequencing

method::dataAction
set the link::Classes/OpenBCI#-dataAction::

method::accelAction
set the link::Classes/OpenBCI#-accelAction::

method::data
last brain wave data readings as an link::Classes/Array::. 

method::accel
last accelerometer readings as an link::Classes/Array::.

method::dataActive
a link::Classes/Boolean:: flag indicating if data should be buffered or not.

method::accelActive
a link::Classes/Boolean:: flag indicating if accelerometer data should be buffered or not.

method::dataFull
a link::Classes/Boolean:: flag indicating if the data buffer filled up to its maximum.

method::accelFull
a link::Classes/Boolean:: flag indicating if the accel buffer filled up to its maximum.

method::size
get or set the maxSize.

method::dataBuffer
current data buffer.

method::accelBuffer
current accel buffer.

method::clear
clear buffers and flags

method::factor
get or set the time scaling factor. For safety keep this slightly under 1.0.

examples::

code::

c= CytonWifi(NetAddr("OpenBCI_WifiShieldOSC.local", 13999), initAction: {|b| b.start});
c.setSampleRate(6);
d= DataSequencer(c);
d.start;
//like OpenBCI dataAction function but spread out in time (~ board sample rate)
d.dataAction= {|num, data, accel| if(num==0, {data.postln})};  //only post every 256th
d.dataAction= nil;

//measure delta time. the following should post 1/sr (~0.004 default for cyton)
t= 0; d.dataAction= {|num, data, accel| var n= Main.elapsedTime; if(num==0, {(n-t).postln}); t= n};
d.dataAction= nil;

//like OpenBCI accelAction function but spread out in time (~ 25Hz)
d.accelAction= {|accel| accel.postln};
d.accelAction= nil;

//measure delta time. the following should post values around 1/25= 0.04
t= 0; d.accelAction= {|xyz| var n= Main.elapsedTime; (n-t).postln; t= n};
d.accelAction= nil;

d.dataBuffer.size;  //internal buffer size - will vary
d.accelBuffer.size;
d.data;  //last reading
d.accel;
d.stop;
c.close;
::
