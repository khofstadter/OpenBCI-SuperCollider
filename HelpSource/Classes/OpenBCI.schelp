class:: OpenBCI
summary:: Abstract class for OpenBCI communication
categories:: External Control
related:: Classes/OpenBCIboard, Classes/DataFFT

description::
for more information about the biosensing hardware see http://openbci.com

note::
this is an abstract class - do not instantiate. use the serial or wifi subclasses.
::

This main OpenBCI class implements commands and features that are the same across all board, synthetic test and file playback classes. Commands specific to link::Classes/Cyton::, link::Classes/CytonDaisy:: and link::Classes/Ganglion:: are in their own classes, while communication and parsing of commands and data depend on emphasis::how:: the board is connected to the computer (via bluetooth serial or via wifi osc). The classes that deal with this are: link::Classes/CytonSerial::, link::Classes/CytonWifi::, link::Classes/CytonDaisySerial::, link::Classes/CytonDaisyWifi::, link::Classes/GanglionSerial::, link::Classes/GanglionWifi::. In client code you should use these serial or wifi classes - not the abstract superclasses.

Here is an overview of the class hierarchy:

classtree:: OpenBCI

for filtering see link::Classes/DataFilter:: and its subclasses,

classtree:: DataFilter

and for other functionality there are helper classes like...
link::Classes/DataBuffer::, link::Classes/DataFFT::, link::Classes/DataSequencer::, link::Classes/DataSmoothing::

classmethods::

method::new

argument::dataAction
set the link::#-dataAction::. a link::Classes/Function::

argument::replyAction
set the link::#-replyAction::. a link::Classes/Function::

argument::initAction
set the link::#-initAction::. a link::Classes/Function::

argument::bufferSize
how many datapoints to store in the internal buffer.

instancemethods::

private:: initOpenBCI

method::currentSampleRate
the current board sample rate in Hertz.

method::warn
a link::Classes/Boolean:: that turn on or off dropped package warning. The default is on (true). Set it to false if using a wifi shield and the network connection is shaky.

method::dataAction
a link::Classes/Function:: that is evaluated as new packages with brain wave data arrives. No data is transmitted until you call the code::start:: method.
There are three arguments passed in to the function: code::num, data, accel:: where code::num:: is a running counter (0-255), code::data:: is the N channels of data from the electrodes in microvolts (uV), and code::accel:: the x, y and z float values from the accelerometer (-4.096 to 4.096 g).

note::
specially when using wifi and a high samplerate, posting every data package can flood the post window and crash supercollider.
::

method::replyAction
a link::Classes/Function:: that is evaluated and passed in a link::Classes/String:: that contains any reply message the board sends back (up until each EOT code::$$$::). by default this will be a function that just posts to the post window, but you can write a custom parser for the replies by setting your own function here.

method::initAction
a link::Classes/Function:: that is evaluated at startup and after each call to link::Classes/OpenBCIboard#-softReset::. initAction is often used to start the streaming. values passed in are the board instance and a link::Classes/NetAddr:: giving the network ip and port of the board.

method::accelAction
a link::Classes/Function:: that is evaluated at when new accelerometer arrives. the argument passed in is an link::Classes/Array:: with three floats (x, y, z) in the range -4.096 to 4.096 g.

method::data
last brain wave data readings as an link::Classes/Array::. can be code::nil:: if streaming has not yet been started.

method::accel
last accelerometer readings as an link::Classes/Array::. can be code::nil:: if streaming has not yet been started.

method::numChannels
an link::Classes/Integer:: that is different for each board.

method::buffer
an link::Classes/Array:: of n-channel link::Classes/List::s acting as an internal buffer. the buffer is rotated one step each time a new datapoint arrives (each subclass call link::#-updateBuffer::). the buffer is mainly useful for filtering. set its size with link::#-bufferSize::

method::bufferSize
get or set the size of the internal link::#-buffer::.

method::updateBuffer
called internally.

argument::data
an link::Classes/Array:: with n-channels of new data. this will be appended to the end of the internal buffer.

method::start
start streaming or start synthetic or file playback.

method::stop
stop streaming or stop synthetic or file playback.

method::softReset
set samplerate to default and reset any hardware

examples::

see examples folder.

or examples section in link::Classes/CytonSerial::, link::Classes/CytonWifi::, link::Classes/GanglionSerial:: or link::Classes/GanglionWifi:: help files.
